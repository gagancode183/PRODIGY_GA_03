
!pip install gradio --quiet

import gradio as gr
from collections import defaultdict
import random

def build_markov_chain(text, order=1):
    words = text.split()
    markov_chain = defaultdict(list)
    
    for i in range(len(words) - order):
        key = tuple(words[i:i+order])
        next_word = words[i+order]
        markov_chain[key].append(next_word)
        
    return markov_chain

def generate_text(chain, order=1, length=50):
    start = random.choice(list(chain.keys()))
    result = list(start)

    for _ in range(length):
        key = tuple(result[-order:])
        next_words = chain.get(key)
        if not next_words:
            break
        result.append(random.choice(next_words))

    return ' '.join(result)
def build_char_chain(text, order=3):
    markov_chain = defaultdict(list)
    for i in range(len(text) - order):
        key = text[i:i+order]
        next_char = text[i+order]
        markov_chain[key].append(next_char)
    return markov_chain

def generate_char_text(chain, order=3, length=300):
    start = random.choice(list(chain.keys()))
    result = list(start)

    for _ in range(length):
        key = ''.join(result[-order:])
        next_chars = chain.get(key)
        if not next_chars:
            break
        result.append(random.choice(next_chars))

    return ''.join(result)
def markov_ui(text, order, length, mode):
    if mode == "Word":
        chain = build_markov_chain(text, order)
        return generate_text(chain, order, length)
    else:
        chain = build_char_chain(text, order)
        return generate_char_text(chain, order, length)
with gr.Blocks() as demo:
    gr.Markdown("## ðŸ§  Markov Chain Text Generator")

    with gr.Row():
        input_text = gr.Textbox(label="Input Text", lines=6, placeholder="Paste your sample text here...")

    with gr.Row():
        order = gr.Slider(1, 10, value=2, step=1, label="Order")
        length = gr.Slider(10, 500, value=100, step=10, label="Generated Length")
        mode = gr.Radio(choices=["Word", "Character"], value="Word", label="Mode")

    with gr.Row():
        generate_btn = gr.Button("Generate Text")

    output = gr.Textbox(label="Generated Output", lines=10)

    generate_btn.click(fn=markov_ui, 
                       inputs=[input_text, order, length, mode],
                       outputs=output)

demo.launch()
